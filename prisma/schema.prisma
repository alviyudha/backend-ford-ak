// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model user {
  cuid        String   @id @default(cuid())
  username  String   @unique
  password  String
  role      role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

enum role {
  USER
  ADMIN
}

model vehicle {
  id        String   @id @default(cuid())
  model     String
  year      Int
  type      String
  trims     trim[]   
  createdAt DateTime @default(now())
}
model trim {
  id               Int        @id @default(autoincrement())
  trim             String
  trimDetail       String
  vehicleId        String
  brochure         String
  otrArea          String
  otrPrice         String        
  imgView         String 
  urlImgView         String 
  backgroundImg    String
  urlBackgroundImg String
  urlBrochure      String
  urlYoutube       String?  
  itemSpec1        String?
  itemSpec2        String?
  itemSpec3        String?
  linkPage         String
  createdAt        DateTime   @default(now())
  vehicle          vehicle    @relation(fields: [vehicleId], references: [id]) 
  colors           color[]    
  miniSpecs        miniSpec[] 
  specifications   specification[]
}

model color {
  id              Int      @id @default(autoincrement())
  title           String
  text            String
  descColor       String
  colorsImage     String
  urlcolorsImage  String
  backgroundColor String
  trimId          Int
  createdAt       DateTime @default(now())
  trim            trim      @relation(fields: [trimId], references: [id]) // Foreign key ke Trim
}

model miniSpec {
  id            Int      @id @default(autoincrement())
  title         String?
  text          String?
  imgMiniSpec   String
  urlImgMiniSpec String
  catMiniSpec   String
  createdAt     DateTime @default(now())
  trimId        Int
  trim          trim      @relation(fields: [trimId], references: [id]) // Foreign key ke Trim
}

model specification {
  id          Int      @id @default(autoincrement())
  title       String
  text        String
  catSpec     String
  createdAt   DateTime @default(now())
  trimId      Int

  trim        trim      @relation(fields: [trimId], references: [id]) // Foreign key ke Trim
}



model img_slide_home {
  id        Int      @id @default(autoincrement())
  image     String
  urlImage  String
  datetime  DateTime @updatedAt
  createdAt DateTime @default(now())
}

model dealer {
  id             Int      @id @default(autoincrement())
  name           String
  address        String
  urlFacebook    String
  whatsapp       String
  urlMaps        String
  urlInstagram   String
  imgDealer      String
  urlImageDealer String
  createdAt      DateTime @default(now())
}

model messageUser {
  id          Int      @id @default(autoincrement())
  name        String?
  email       String?
  telp        String?
  nopol       String?
  carModel    String?
  dealer      String?
  dateInput DateTime?
  inputMessage String?
  catMessage String?
  address String?

  createdAt   DateTime @default(now())
}
